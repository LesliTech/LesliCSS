/*!
 * Responsive Cat
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * CSS version 3
 *
 * Sistema de grids y blocks para ResponsiveCat
 *
 * @category Structure
 * @package  Base styles
 * @author   Luis Gdonis <mail@ldonis.com>
 * @license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html
 * @version  0.7.0
 * @link     http://responsivecat.com
 */

 /*!
  * Contenedor de columnas automaticas y manuales
  * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
  * @author Luis Gdonis <http//ldonis.com>
  * @since 0.7.0
  */
.rgrid
.rblock
    width 100%
    font-size 0
    text-align justify


    /*! Estilos a pseudo elementos
     * ================================== */
    &:after
        content ''
        width 100%
        display inline-block

    /*! Filas del grid
     * ================================== */
    & > *
        height 100%
        font-size initial
        white-space initial
        display inline-block
/*!
 * Grid
 * Ancho de columnas automaticas
 * columns-n = (width-margin)/n
 * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
 * @author Luis Gdonis <http//ldonis.com>
 * @since 0.7.0
 */
.rgrid

    /* Margen separador del grid
     * ============================= */
    $margen = 1

    /* Cantidad de columnas del grid
     * ============================= */
    $columns = 12

    /* Nombre de columnas
     * ============================= */
    $column-prefix = 'columns-'

    /* Iteracion por cada columna
     * ============================= */
    for column in (2..$columns)

        /* Si es menor de diez se agrega
         * un 0 al prefijo para estandarizar
         * ================================= */
        if column < 10
            $column-name = $column-prefix + '0'
        else
            $column-name = $column-prefix

        /* Calcula el margen de columnas
         * cada columna a excepcion de laprimera
         * tendra 1% de margen, o lo establecido
         * en la variable "$margen"
         * ===================================== */
        $margen-calculado = $margen * (column - 1)

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho = ( 100 - $margen-calculado) / column

        /* Crea columna
         * Concatena
         *  Nombre de columna mas numero
         * ============================= */
        &.{$column-name}{column} > *

            /* Se concatena el % al ancho
             * ============================= */
            width unit($ancho, '%')


/*!
 * Grid
 * Ancho de columnas manuales
 * .column-n = ((width/10)*n)-margen
 * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
 * @author Luis Gdonis <http//ldonis.com>
 * @since 0.7.0
 */
.rgrid

    /* Margen separador del grid
     * ============================= */
    $margen = 1

    /* Cantidad de columnas del grid
     * ============================= */
    $columns = 10

    /* Nombre de columnas
     * ============================= */
    $column-prefix = 'column-'

    /* Iteracion por cada columna
     * ============================= */
    for column in (1..$columns)

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho = (( 100 / ( $columns)) * column) - $margen

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho-no-margen = (( 100 / $columns) * column)

        /* Nombre de columna
         * ============================= */
        $column-name = $column-prefix

        /* Crea columna
         * Concatena
         *  Nombre de columna mas numero
         * ============================= */
        .{$column-name}{column}

            /* Se concatena el % al ancho
             * ============================= */
            width unit($ancho, '%')

            &:first-child
                width unit($ancho-no-margen, '%')


/*
 * Block
 * Ancho de columnas automaticas
 * columns-n = width/n
 * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
 * @author Luis Gdonis <http//ldonis.com>
 * @since 0.7.0
 */
.rblock

    /* Cantidad de columnas del grid
     * ============================= */
    $blocks = 12

    /* Nombre de columnas
     * ============================= */
    $block-prefix = 'columns-'

    /* Iteracion por cada columna
     * ============================= */
    for block in (2..$blocks)

        /* Si es menor de diez se agrega
         * un 0 al prefijo para estandarizar
         * ================================= */
        if block < 10
            $column-name = $block-prefix + '0'
        else
            $column-name = $block-prefix

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho = ( 100 / block)

        /* Crea columna
         * Concatena
         *  Nombre de columna mas numero
         * ============================= */
        &.{$column-name}{block} > *

            /* Se concatena el % al ancho
             * ============================= */
            width unit($ancho, '%')


/*
 * Block
 * Ancho de columnas automaticas
 * columns-n = width/n
 * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
 * @author Luis Gdonis <http//ldonis.com>
 * @since 0.7.0
 */
.rblock

    /* Cantidad de columnas del grid
     * ============================= */
    $blocks = 12

    /* Nombre de columnas
     * ============================= */
    $block-prefix = 'column-'

    /* Iteracion por cada columna
     * ============================= */
    for block in (1..$blocks)

        /* Nombre de columna
         * ============================= */
        $column-name = $block-prefix

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho = ( 100 / $blocks) * block

        /* Crea columna
         * Concatena
         *  Nombre de columna mas numero
         * ============================= */
        &.{$column-name}{block} > *

            /* Se concatena el % al ancho
             * ============================= */
            width unit($ancho, '%')


/*
 * Block
 * Ancho de columnas manuales
 * ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~  ~·~
 * @author Luis Gdonis <http//ldonis.com>
 * @since 0.7.0
 */
.rblock

    /* Cantidad de columnas del grid
     * ============================= */
    $blocks = 10

    /* Nombre de columnas
     * ============================= */
    $block-prefix = 'column-'

    /* Iteracion por cada columna
     * ============================= */
    for block in (1..$blocks)

        /* Nombre de columna
         * ============================= */
        $column-name = $block-prefix

        /* Calcula el ancho de cada columna
         * formula
         *   Ancho total menos margen
         *   dividido numero de columnas
         * ================================ */
        $ancho = ( 100 / $blocks) * block

        /* Crea columna
         * Concatena
         *  Nombre de columna mas numero
         * ============================= */
        .{$column-name}{block}

            /* Se concatena el % al ancho
             * ============================= */
            width unit($ancho, '%')
